pipeline {
    agent any

        stages {

            stage('Build Env File') {

                steps {

                    withCredentials([usernamePassword(credentialsId: 'MARIADB_ROOT', passwordVariable: 'ROOT_PASSWORD', usernameVariable: 'ROOT_USERNAME')]) {
                        withCredentials([usernamePassword(credentialsId: 'FIREPIT_DB_CREDS', passwordVariable: 'PASSWORD_1', usernameVariable: 'USERNAME_1')]) {

                                    writeFile file: './MariaDB/env.sh', text: """#!/bin/sh
ROOT_PASSWORD="${ROOT_PASSWORD}" 
FIREPIT_USERNAME="${USERNAME_1}" 
FIREPIT_PASSWORD="${PASSWORD_1}" 
"""

                        }
                    }

                }
            }

            stage('SSH Public And Scripts') {

                steps {

                    sshPublisher(
                            publishers: [
                            sshPublisherDesc(
                                configName: "${SSH_SERVER}",
                                transfers: [
                                sshTransfer(cleanRemote: false,
                                    excludes: '',
                                    execCommand: '''
                                    cd pipeline_mariadb_setup/MariaDB
                                    


                                    log_dir="$HOME/log/jenkins-ssh"
                                    mkdir -p $log_dir
                            
                                    log_file="$log_dir/firepit-mariadb-jenkins-setup-log.out"
                                    touch $log_file
                            
                                    exec 3>&1 4>&2
                                    trap 'exec 2>&4 1>&3' 0 1 2 3
                                    exec 1>$log_file 2>&1
                                     
                                    
                                     
                                    chmod +x env.sh
                                    . ./env.sh
                                    rm -rf env.sh

                                    
                                    
                                    DB_NAME="firepit-mariadb"
                                    CONTAINER_NAME="firepit-mariadb"
                                    
                                    
                                    if docker ps -a --format '{{.Names}}' | grep -Eq "^${CONTAINER_NAME}$"; then
                                    
                                        echo "Docker container with name $CONTAINER_NAME already exists, it must be removed first"
                                    
                                        exit 1
                                    
                                    fi
                                    
                                    
                                    if [ -n "${ROOT_PASSWORD}" ]; then
                                    
                                        echo "Docker run creating container with name: $CONTAINER_NAME"
                                    
                                        docker run --restart always \
                                            --name "$CONTAINER_NAME" \
                                            -p 127.0.0.1:3306:3306 \
                                            -e MARIADB_DATABASE="$DB_NAME" \
                                            -e MARIADB_ROOT_PASSWORD="$ROOT_PASSWORD" \
                                            -d \
                                            --network=firepit mariadb:latest
                                    
                                    else
                                    
                                        echo "ROOT_PASSWORD env var is not set, this is required!"
                                    
                                        exit 1
                                    
                                    fi
                                    
                                    while true; do
                                    
                                        echo "Waiting for MariaDB to respond..."
                                    
                                        docker exec "$CONTAINER_NAME" mariadb-admin ping -uroot -p"${ROOT_PASSWORD}" &>/dev/null && break
                                    
                                        sleep 1
                                    done
                                    
                                    echo "MariaDB server is ready, creating users..."
                                    
                                    echo "Checking MariaDB status..."

                                    while true; do

                                        docker exec "$CONTAINER_NAME" mariadb -uroot -p"$ROOT_PASSWORD" -e "status" > /dev/null 2>&1

                                        result=$?

                                        if [ $result -eq 0 ]; then
                                            echo "MariaDB is ready."
                                            break
                                        else
                                            echo "MariaDB is not ready yet, waiting..."
                                            sleep 1
                                        fi
                                    done
                                    

                                    echo "Creating a database..."

                                    docker exec $CONTAINER_NAME mariadb -uroot -p"$ROOT_PASSWORD" -e "CREATE DATABASE \\`$DB_NAME\\`;"
                                    

                                    if [ ! -z "$FIREPIT_USERNAME" ] && [ ! -z "$FIREPIT_PASSWORD" ]; then

                                        echo "Creating MySQL user with name $FIREPIT_USERNAME"

                                        docker exec "$CONTAINER_NAME" mariadb \
                                            -uroot -p"$ROOT_PASSWORD" \
                                            -e "CREATE USER '$FIREPIT_USERNAME'@'%' IDENTIFIED BY '$FIREPIT_PASSWORD';"

                                        docker exec "$CONTAINER_NAME" mariadb \
                                            -uroot -p"$ROOT_PASSWORD" \
                                            -e "GRANT ALL PRIVILEGES ON *.* TO '$FIREPIT_USERNAME'@'%' WITH GRANT OPTION;"
                                    fi
                                    
                                    echo "Setup is completed successfully!"

                                   
                                    ''',
                                    execTimeout: 120000,
                                    flatten: false,
                                    makeEmptyDirs: false,
                                    noDefaultExcludes: false,
                                    patternSeparator: '[, ]+',
                                    remoteDirectory: 'pipeline_mariadb_setup',
                                    remoteDirectorySDF: false,
                                    removePrefix: '',
                                    sourceFiles: 'MariaDB/env.sh')
                                ],
                                usePromotionTimestamp: false,
                                useWorkspaceInPromotion: false,
                                verbose: false
                                    )
                                    ]
                                    )
                }
            }

        }
}
