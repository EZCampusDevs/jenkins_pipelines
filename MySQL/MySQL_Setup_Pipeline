pipeline {
    agent any

    stages {

        stage('Build Env File') {

            steps {

                withCredentials([usernamePassword(credentialsId: 'MYSQL_ROOT', passwordVariable: 'ROOT_PASSWORD', usernameVariable: 'ROOT_USERNAME')]) {
                    withCredentials([usernamePassword(credentialsId: 'MYSQL_USER_PASS_1', passwordVariable: 'PASSWORD_1', usernameVariable: 'USERNAME_1')]) {
                        withCredentials([usernamePassword(credentialsId: 'MYSQL_USER_PASS_2', passwordVariable: 'PASSWORD_2', usernameVariable: 'USERNAME_2')]) {
                            withCredentials([usernamePassword(credentialsId: 'MYSQL_USER_PASS_3', passwordVariable: 'PASSWORD_3', usernameVariable: 'USERNAME_3')]) {


                                writeFile file: './MySQL/env.sh', text: """#!/bin/sh

# define the root password and usernames/passwords for MySQL
ROOT_PASSWORD="${ROOT_PASSWORD}" 
MYSQL_USERNAME_1="${USERNAME_1}" 
MYSQL_USERNAME_2="${USERNAME_2}" 
MYSQL_USERNAME_3="${USERNAME_3}" 
MYSQL_USER_PASS_1="${PASSWORD_1}" 
MYSQL_USER_PASS_2="${PASSWORD_2}" 
MYSQL_USER_PASS_3="${PASSWORD_3}"

# create a list of usernames and passwords
usernames=("$MYSQL_USERNAME_1" "$MYSQL_USERNAME_2" "$MYSQL_USERNAME_3")
passwords=("$MYSQL_USER_PASS_1" "$MYSQL_USER_PASS_2" "$MYSQL_USER_PASS_3")

# loop over each username/password and create the corresponding MySQL user with permissions
for i in "${!usernames[@]}"; do
    username=${usernames[i]}
    password=${passwords[i]}

    if [[ ! -z "${username}" ]] && [[ ! -z "${password}" ]]; then
        echo "Creating MySQL user with name $username"
        
        docker exec $CONTAINER_NAME mysql -uroot -p"${ROOT_PASSWORD}" -e "CREATE USER '${username}'@'%' IDENTIFIED BY '${password}';"
        docker exec $CONTAINER_NAME mysql -uroot -p"${ROOT_PASSWORD}" -e "GRANT ALL PRIVILEGES ON *.* TO '${username}'@'%' WITH GRANT OPTION;"
    else
        echo "No environment variable set for username/password at index $i"
        exit 1
    fi
done
"""
                                }
                            }
                        }
                    }

                }
            }

        stage('SSH Public And Scripts') {

            steps {

                sshPublisher(
                        publishers: [
                        sshPublisherDesc(
                            configName: '2GB_Glassfish_VPS',
                            transfers: [
                            sshTransfer(cleanRemote: false,
                                excludes: '',
                                execCommand: '''
                                cd pipeline_mysql_setup/MySQL
                                chmod +x setup_docker.sh
                                chmod +x env.sh
                                ./setup_docker.sh USE_LOG_FILE
                                ''',
                                execTimeout: 120000,
                                flatten: false,
                                makeEmptyDirs: false,
                                noDefaultExcludes: false,
                                patternSeparator: '[, ]+',
                                remoteDirectory: 'pipeline_mysql_setup',
                                remoteDirectorySDF: false,
                                removePrefix: '',
                                sourceFiles: 'MySQL/setup_docker.sh MySQL/env.sh')
                            ],
                            usePromotionTimestamp: false,
                            useWorkspaceInPromotion: false,
                            verbose: false
                                )
                                ]
                                )
            }
        }

        stage('Run Env File') {

            steps {
                sshPublisher(
                        publishers: [
                        sshPublisherDesc(
                            configName: '2GB_Glassfish_VPS',
                            transfers: [
                            sshTransfer(cleanRemote: false,
                                execCommand: '''
                                cd pipeline_mysql_setup/MySQL
                                ./env.sh
                                ''',
                                execTimeout: 120000,
                                remoteDirectory: 'pipeline_mysql_setup',
                                remoteDirectorySDF: false,
                                removePrefix: '',
                                sourceFiles: '')
                            ],
                            usePromotionTimestamp: false,
                            useWorkspaceInPromotion: false,
                            verbose: false
                                )
                                ]
                                )
            }

        }
    }
}
